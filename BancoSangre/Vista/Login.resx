<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MoverLogin.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAD2FAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABSwSURBVHja7Z1djFXVFcfnzjgfVkl0ZoRBTEhIIDFoLCT4RLAi1UjSVqKS4FioKBC0
        CYkv0vgJRN8AUxNgJCJoYmIafUFDTaxVIEbamPJAZgS1KcNUQT7EqDAiYNeO696Z0wGdO3evvc/s81vJ
        /23m3r32Wft3zzl7rbXr6opsb/1QVr3oVtFroiOi86IfUFI6r9f2Nb3W9ZXrjxV+8d8n+i+LpDDqEy0C
        AgDAaZbocxZF4fSZXnsAUGAANIo2sxgKq80aA6yHggLgKtFeFkJhtVdjgPVQUABMEPWyEAqrXo0B1kNB
        AXCN6BALobA6pDHAegAACABgAAABAAwAIACAAYDB6hY9L9ok6kK51Ca9Rt0AAPMNABdYzaIGlGs167UC
        AJhXAGzSAKtDuVaDXisAgHkFQFcFAFier2mDXisAgAEAAAAAMAAAAAAABgAAAADAAAAAAAAECwAAAAAA
        AMQAQMhtseKNFQBgOQXA0KCvN0yIqW1xDR2ra5zRZKAGbyAAAFhuATAQ4CXRtaIVog2atGKh1aKbNTOu
        uoU1MNYW0Rz9rC2ibQZy8/qwaKrOTV2NcwwAsJwBIJultlD0UaDOw8dF60Xtw15YA2NtE60TnQhUmHNA
        tKzSomvk8wwAsNwC4E7RFxHaYa+v3AkMb6wt+j/nAo/1pGg+AMBSBID7Fd4dqez12LA64A6A6jbRl5HG
        +v6I+/QBACzHALgp4qJyWlUFAJ6JOM6vRLcAACw1ALhb21MRF9bPj3/gbf+WiOPsF90LALDUADBX9HXE
        hbVumHcAbmvyuYjj/FZ0BwDAUgPAxCo61fjWadGCKh4B3LFZZyKN9RPRZACApQYAt8e9UnQ2wqLaMayt
        wAEAdIjeiTBONzdP1jjPAADLJQCcWvVz+gMuKrfzMH0EeQA3ivYEfvbfqHPENiCWEACyC2uMaLFouya/
        9OkYfOqgaKfoCdGkqtJss2m57lZ8jW7NHTQYp9PHojdFD+jckAmIJQ2Asi4Xjdcx+JY77urKTGrtyFKB
        y48urfqZFmMdr3NRez0AAMByC4CLgyC/VXajaawAABsVAMCsrykAwAAAAAAAGAAAAAAAAwAAAABgAAAA
        AAAMAAAAAIABAAAAAHJ14WKoowoAbOTgzVGjjVUAoCPaOFn4QzLOXMXc7Zoq6/rDLTXUEtEjVfS8c3nx
        j4r+hHKtR6uoYTihMbDEONaWaUzfrjFeAgRZALRqpVy31syf0cqwEPoBFVqh4uyMxna3xnprsQGQLY7p
        YjGigkHHtYS/rLgQGADA4sDlsQjlQae08UqhAXC5lsUSEKiI2l6phCwoAFwp6H4CARVU+3UNFHofvo9A
        QAVVX3HzEKpPxEEoNR0CAAAAAQAAgBAAAAA/d8ildbLGOYIyeZ0LEEfnAYB/ALgut8s1rdJKy/Ws+pWk
        1CanlXptQ8TQTgDgHwAU46AUi5EAAOW4WEIxTTkyAMAAAAAAABgAAAAAAAMAAAAAYAAAAAAADAAAAACA
        AQAAwOGcHucSvzicFABUEUz5PZ575H41iq4yOsp7gn52Y2CfSjqXHE8OALwAwPUgvE+7sezXmuxDnnVQ
        00GfEk0yWzADn1svmiV6XvQvUa+BT7362c/rd9Ub+1Snc/eUzuVBA5/6NAa2a0xcDgBSBEC2+3BX4B6E
        u0XTvS+W7OJ3fRU/D+jTZ6I/mEBgwK/pOnehfDqtjTpH3q0XAOQaACUtCInRfXiHqN3rYhlYKLMCL/7B
        EJhl5JN71HgrUrfelZVHNwCQFAAmak/2GCWo7tdlgcFicc/jmyOW1m6uvBPwC4B7InaK7tZYAQCJAWCu
        HswQa7GsNQCA+6XcG9GnvToGnz65X99nI/r0tcYKAEgMAPO1F3uswPKbx/CjT+7N+H8i+vRv0dWefapm
        AVn1658PANIDwE2iLyMG1iqDOwC3PbYrok/viq4weARYHdEnd17gTACQHgDaAr9VHqxjRi/MSrpNFmux
        PGb0EvBm0fFIPu3SWAEACW4DzhMdDRxQrj/celGz0XbZpEhg253JcfDrV7PO2fnAPh3VGGEbMFEAuP9f
        KPooUHAd00Bur7NNmpmuW42nA+1o7DDJbcj61K5zdzwQpHtEnZUYAwAJASAbWO62eYpohfZu6zLSKr3t
        bzZLm81mzbXrVuNaQ5/W6ne0m6YDD3x2sz4OrDb0aaPGwhRSgVMGwNAFU86iazBSmMKZCxe1hPEprF9W
        PtV78wkA5BwAP71oRmfFXAyfUvUr/DYmAKAfAJZYTAMAAIABAAAAADAAAAAAAAYAAAAAwAAAAAAAGAAA
        AGwD2swnfrENCACqCKYUE4GcT01GKkX0q9HIpwYSgYoAgGwq8LWa/ul6wG0y0mpNYw2VCtwhWiT6s2ir
        aJtnbdVGHfeKxgZKBW4RzdG53GLg0zaNq4dFUzOAAwAJASBeMdDxQMVAN4r+LjoTwKfvRH8TzTD2yZXk
        rtP6/BCVgAdEyzJtzwFAcgC4U/RFYuXArohlT4Ry4D2ZAhq/frXonJ0L7NPJSjcgAJAcANoTbQiyJmJD
        kGcqxTR+oXZbxO5N74+4zyEAyDUAUmwJ1qoBG8unPSPunvPTAHgmok9fiW4BAOkBINWmoAcj+uQ3gAfe
        9m+J6FO/vugEAIkBIHZb8HUGdwDjRPsi+tSjuw8+fXKPFM9F9Olb0R0AID0ApHgwSLNuz8VaLC/rCzvf
        jwCLAu1oXEifiCYDgPQAkOrRYO559UgEn47oHr2FT+6u4p1IR4M9WWOcAYAcbwOmeDjoJaKHAm9vHtHv
        vMTQrxsDb2/2a39ADgdNDgDZwBqjp+lu1+QPy+PBnwh0PLhbiL/WW/IeI58O6fsG98gxu6buucPzqU5v
        xdfoTsdBI58+Fr0pekBjg0zAxAFQljsLfryOwbcm6Kk9JfO8+axPLXr7fI2RxmVSm8P4VNJf5QlGPo3X
        WKi9HgAA5BgAFwfB6K+ci+FTqn7VPl4AkGsAYJhtTAMAAIABAAAAADAAAAAAAAYAAAAAwAAAAAAAGAAA
        AAAAAwAAIHpT0DT2zPEpH34BgBwDYGjG3DTRXaIl2gtuqSe5z+oUzczklds3BS1pxePtmurs26fF+tkT
        zTMcs3616lx2Gvi0RGNgWqWqkUzABAGQDajrRS+JDmuDkO+1Csyn+rWZ5S7RvAB5861a6ditPQ/OGPh0
        Rj+7W7+r1dinBp27XTqX/QY+fa8xcFhj4rqaIAAAcg8At/g/DFxielR/vayq5sbo3IQscz6rLdUvM/Kr
        pN2bjwa+Vh9kIAAAkgJAi1I+Vuccvx10BwCwOHB5c1mntHGHhU9TtHV7jGv10oibnACAXANgmt7qxQiq
        83oQie/FcrmWNcfqCLS9UknnFwArAp3bcCEd1lgBAIkB4K7ITUE3GrTQHq89DWL5dEDH4NOnep2rmD0B
        5wEAAAAAigmAb2gKyiMAjwDFfQT4XHQDAOAlIC8B474E7In4EvBSAMA2INuA8bYB63TO2AYEACQCDcMv
        EoFqSwT6nESglAEwFALlVOC7B6WF+lQ5FbgtQirw3EGpwD61WD87dCpw2/+lAvvUUn05fEPltp9U4EQB
        MDSwKJzBJ4qBCgUADLOPaQAAADAAAAAAAAYAAAAAwAAAAAAAGAAAAAAAAwAAAABgAAAAcDiox7nELw4H
        BQBVBFOKx4M36xHelseDN3E8OAAYzQBwxTP3aSnrflGfjsGnDop2ip4STTJbMAOfe4lotuhF0T4Df8ra
        p98xO0B9g9Nk0RrR+zqnFj59LHpDdL/GBgBIDgDZopmuwOWzu0XTDavm3OJ/SHQkcNush/S7rfyaodV5
        oXzq10YkrRQDpQmAklaxhSybLWuHqN2odn5O4MVf1hH9bgufOkTvRPDJxcaTNcYZAMgpACZqKWuMJhOn
        RQsMFot75n85Ykegl3UMvgGwSMuPY/j0iT56AIDEADBX69ljLZa1BgDoiNg5p9zpqMOgJ+BzkZuC0hMw
        QQDMj9wU1G8ew48+TdCXY7F88hvAP/rUKHohok/9lQ5OACApAMzUzjKxAmuVwR1Aq74hj+XTnkrTE7+P
        AGsi+vSl6FcAID0AtGl7qRhBdUw0ywAApciL5WmDVuflF5uxYL1rxFADALnfBpwXodGka2+93uvLsqxP
        kwNvlw3+9Z9itA3oWratE50L7NNJbRHGNmCiAGjQ57ueQH3nj+nib6+zTZqZodtmId6cfyd6W7/T0qc2
        hUCoO4ED2iOwEQCkBoBsYJX7zq/QxI8uI63S2/7mQM0zO3T7zL1B32agraJnFaBjAzUFbdHHgdWiLUZ+
        uWv1sGgqqcApA2DogilvOTUYKUzhzIV9ajJSKaJfjUY++btWACDnALh4cI3eirkYPqXql5+xAoDcAwDD
        7GIaAAAADAAAAACAAQAAAAAwAAAAAAAGAAAAAMAAAABgG9BmPvGLbUAAUEUwkQhEIhCJQIUAQLbLbDkV
        eINok5Fc+urNkVKBt5IKTCowABgaUO7/F4o+ClQMdJxioBH7RDEQAKAceBg+xSoH/oByYAAwmgDQSkMQ
        GoIMQztpCJImAGgJRkswWoIVGAA0BfWvXh2DT5/y0BT0HgCQHgBitwVfZ3AHME6P64rl0z4dg+/Hmmcj
        +vSN6DcAID0ApHgwSJOe1RdrsbxYOSzU7yNAp+42xPBpf+U8RwCQFABSPRpstp7VF9qnw/rdFj6N1a3G
        GEeDPT7iF5sAIPfbgK3aB/B0QoeDNkQ6HPRBkxOC4x0O+p3GxpVsA6YGgGxgubPgF+vx4AcMjwd/T/RY
        wOPB5+hZfT1GPsU4HnyKbjXu0ReOvv1x8/Sp6K+aBMTx4AUAwGAQjNcx+JZ7M35FkLz57Hc0a0rwNUYa
        V3nmD+dTvW41TjDy6erMwgcAiQLg4iAY/ZVzMXxK1a/axwsAcg0ADLONaQAAADAAAAAAAAYAAAAAwAAA
        AAAAGAAAAAAAAwAAAABgAAAARG8KmsaeOT7lwy8AkGMAZC+yazk1Tds/LREt01RQH1qm1WwztfYgRPPM
        cuC59mB3aN9D3/q9lslOqhTLhPGrTRt0dBr5NV9rNX5BJmCqAMgG1PWil7SgxTUI+V6rwHyqX7sP7dI+
        hNZ58w40T4o+EX2rhS0W+kbLZR+vqWhmeD41KqB3apeefiOfTmksvCL6ZU0QAAC5B4Bb/B8GLjE9qr9e
        VlVzY7SKLWSZ81n9zjGGfi3VJp0hr9U/MxAAAEkBoEV/+WM0mejx3kF3YKHcr7+OoX36ThephU9TtVIz
        xrV6pfI4AACSAsC0SI0zyq3BVxgsFlfR+EbEjkB/rdwF+AXAwxF9Olzp3wAAkgLAXZGbgm40aKHtypk/
        jujTp1pOG2sbzUKn9MUgAAAAAAAAAAAeAfL9CPAmjwA8AgAAXgLyEpCXgADgZwLrOtE/AgfUF2wDsg0I
        APIBgDIEQiYC/Y5EoBH5RCIQADBPBb57UPquT5VTgdsSSgVemGAq8CJSgYsCgKGBReEMPlEMVCgAYJh9
        TAMAAIABAAAAADAAAAAAAAYAAAAAwAAAAAAAGAAAAAAAAwAAgMNBPc4lfnE4KACoIphCHA9e4njwmn3i
        eHAA4BUA7mLfJ9quee19OgafOih6T/SEps7WGefNXyKaozUOPQb+lLVP9KLo5gD1DXVaQfm0aI+o18in
        T7WseWnNxU0AIKcAyBbNdAUun91dqS+3qZpzc/KQ6EjgmvkHTSAw4NcM0QeBy5s31lTkBAByDQB3O74y
        cNlsWTtE7Ua187MjNTo5rN9t4dNY0dsRfDqrlY71ACA9AEwUdUdqMnFatMBgsTTpLXms7jkvVt4J+AVA
        p/4ix/Bpf+WxDQAkBYC5oq8jLpa1BgAYp8/lsXzap2Pw6ZO7U3s2ok/faNkzAEgMAPMjNwX1m8fwo08T
        9IVjLJ96dQw+fXKNQF6I6JN7P3QPAEgPADO1S0+swFplcAfgXmq+H9GnPZWmJ34fAdZE9OlLbUACABID
        QJu26IoRVMdEswwAUIq8WJ42aHVep1uasWC9a8RQAwC53wacp2f1hW4Jvl6TdCy2yyYH3i4b/Os/xWgb
        0LVsWyc6F9ink9qHkG3ARAHQoG+Ye3RhhvjlX+99C/DCe+bviM4E2i9/W7/T0qc2hUCoO4EDmgzUCABS
        A0A2sMoZZis08aPLSKv0tr85UPPMDm1y+Zxom4G26tv5Tt2nD9EUtEUfB1aLthj51aUHkUwlFThlAAxd
        MOU88wYjhSmcubBPTUYqRfSr0cgnf9cKAOQcABcPrtFbMRfDp1T98jNWAJB7AGCYXUwDAACAAQAAAAAw
        AAAAAAAGAAAAAMAAAAAAABgAAAAAoPa5y5+4LgAAAARd+JaJTMNVPSAAAAAg3OIvDUpl3iDaFFkbdCxT
        Cg8BAAAAjBe/83+h6KNAxUzVVDz2aJ1AQ2EhAAAAgDEAYpQzV6MvRL8FAAAAAPifq9aIDU2q0bs6VgAA
        AACAx7mK3dJsuDqhYwUAAAAAeJyrzsAHmtTSVLMTAAAAAOB3rpZFOtRkJIdrLAMAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEAQAJwwOEb7BAAAAAAg/wBwf/OIdgm+xpM69DPPAgAAAADyD4ClBtV+SwEAAAAAowMA
        fhdg7O8HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuQTApszBk8XT
        6OsIVEw1aKwCAM8AeF7UFPDc+zzJzdXyKhbgH0WNoks9qVE/c7jfv3zQYiiamjRWAYBnAHTrrdWmAmqD
        aOcwjwR3f/Oh6FXRXzzpVf3M4X7/Th1zEa9Vl8YqAPAMAIRSEwAAAAgAAACCAQEAAIAQACgaAHoJBFRQ
        9RYdAFeJ9hIIqKDaq2ugsABw+8ubCQRUUG3WNVBYADjdJPqMYEAF02ca+3VFB0C9aJGoj6BABVGfxnx9
        cQEwFAK3il4XHRlmxhlCo0nnNbZf11jPxeL/H7IDaJQEYSldAAAAAElFTkSuQmCC
</value>
  </data>
</root>